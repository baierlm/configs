# interpreter for shell commands (needs to be POSIX compatible)
set shell sh

# set '-eu' options for shell commands
set shellopts '-eu'
# set internal field separator (IFS) to "\n" for shell commands
set ifs "\n"

#$lf -remote "send $id set previewer ${XDG_CONFIG_HOME:-$HOME/.config}/lf/scope.sh"

# leave some space at the top and the bottom of the screen
set scrolloff 10
set wrapscroll

set icons
set drawbox
set globsearch

cmd yank-dirname ${{
    dirname -- "$f" | tr -d '\n' | xclip -i -selection clipboard
}}

cmd yank-path ${{
    if [ -n "$fs" ]; then echo "$fs"; else echo "$f" | tr -d '\n'; fi |
      xclip -i -selection clipboard
}}

cmd yank-basename ${{
    if [ -n "$fs" ]; then
      echo "$fs" | xargs -r -d '\n' basename -a --
    else
      basename -- "$f" | tr -d '\n'
    fi | xclip -i -selection clipboard
}}

cmd bg-center ${{
    feh --bg-center "$f" 
}}
cmd bg-fill ${{
    feh --bg-fill "$f" 
}}
cmd bg-max ${{
    feh --bg-max "$f" 
}}
cmd bg-scale ${{
    feh --bg-scale "$f" 
}}
cmd bg-tile ${{
    feh --bg-tile "$f" 
}}
# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        image/*) sxiv -ao $f;;
        application/pdf) zathura $f;;
        inode/x-empty) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}



# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.trash

# define a custom 'delete' command
# cmd delete ${{
#     set -f
#     printf "$fx\n"
#     printf "delete?[y/n]"
#     read ans
#     [ $ans = "y" ] && rm -rf $fx
# }}

# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> delete

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# Keybindings

map f
map y
map d
map m

map yy copy
map yp yank-path
map yb yank-basename
map yd yank-dirname

map dd cut

map bgc bg-center
map bgf bg-fill
map bgm bg-max
map bgs bg-scale
map bgt bg-tile

# use enter for shell commands
map <enter> shell-pipe

# execute current file (must be executable)
map x $$f
map X !$f

map n &st

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

map r push :rename<space>
map <delete> trash

source ~/.config/lf/shortcuts.conf
